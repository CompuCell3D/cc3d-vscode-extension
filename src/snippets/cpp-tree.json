{
    "Adhesion Flex": {
        "Get Molecule Dens. By Index": {},
        "Get Molecule Dens. By Index (Medium)": {},
        "Get Molecule Dens. By Name": {},
        "Get Molecule Dens. By Name (Medium)": {},
        "Set Molecule Dens. By Index": {},
        "Set Molecule Dens. By Index (Medium)": {},
        "Set Molecule Dens. By Name": {},
        "Set Molecule Dens. By Name (Medium)": {}
    },
    "Cell Attributes": {
        "Get ExtraAttribute": {}
    },
    "Cell Constraints": {
        "Apply Force To Cell": {},
        "Change Lambda Motility": {},
        "Change Lambda Surface": {},
        "Change Lambda Volume": {},
        "Change Target Surface": {},
        "Change Target Volume": {},
        "Connectivity Constraint By Cell Id": {},
        "Length Constraint By Cell Id": {}
    },
    "Cell Manipulation": {
        "Create Cell": {},
        "Create Cell (detailed)": {},
        "Delete Cell": {},
        "Fetch Cell By Id": {},
        "Get Cell At a Pixel": {},
        "Merge Cell": {},
        "Move Cell": {}
    },
    "Chemical Field Manipulation": {
        "Get Field Max Value": {},
        "Get Field Min Value": {},
        "Get Field Reference": {},
        "Get Field Value": {},
        "Modification (aka secretion)": {},
        "Set Field Value": {},
        "Write To Disk": {}
    },
    "Chemotaxis": {
        "By Cell Id (Define)": {},
        "By Cell Id (Modify)": {}
    },
    "Distances, Vectors, Transformations": {
        "Distance  Between Cells": {},
        "Distance  Between Cells (Invariant)": {},
        "Distance Vector Between Cells": {},
        "Distance Vector Between Cells (Invariant)": {},
        "Distance Vector Between Points": {},
        "Distance Vector Between Points (Invariant)": {},
        "Distance Vector Between Points (Invariant, Integer)": {},
        "Hex: Cartesian 2 Hex": {},
        "Hex: Hex 2 Cartesian": {},
        "Numpy: Numpy Array To Point3D": {},
        "Numpy: Point3D To Numpy Array": {},
        "Vector Norm": {}
    },
    "Elasticity": {
        "Add New Elastic Link": {},
        "Modify Existing Links": {},
        "Remove Elastic Link": {}
    },
    "Extra Fields": {
        "Scalar Field Cell Level - Clear (step fcn.)": {},
        "Scalar Field Cell Level - Create (__init__ fcn.)": {},
        "Scalar Field Cell Level - Example": {},
        "Scalar Field Cell Level - Write (step fcn.)": {},
        "Scalar Field Pixel Level - Clear (step fcn.)": {},
        "Scalar Field Pixel Level - Create (__init__ fcn.)": {},
        "Scalar Field Pixel Level - Example": {},
        "Scalar Field Pixel Level - Write (step fcn.)": {},
        "Vector Field Cell Level - Clear (step fcn.)": {},
        "Vector Field Cell Level - Create (__init__ fcn.)": {},
        "Vector Field Cell Level - Example": {},
        "Vector Field Cell Level - Write (step fcn.)": {},
        "Vector Field Pixel Level - Clear (step fcn.)": {},
        "Vector Field Pixel Level - Create (__init__ fcn.)": {},
        "Vector Field Pixel Level - Example": {},
        "Vector Field Pixel Level - Write (step fcn.)": {}
    },
    "Extra Fields Automatic Tracking": {
        "Track Scalar Cell Attribute (__init__)": {},
        "Track Scalar Cell Attribute Custom Function (__init__)": {},
        "Track Vector Cell Attribute (__init__)": {},
        "Track Vector Cell Attribute Custom Function (__init__)": {}
    },
    "Focal Point Placticity": {
        "Link inventory: Get anchor assicated with a cell and anchor id": {},
        "Link inventory: Get internal link associated with two cells": {},
        "Link inventory: Get link associated with two cells": {},
        "Link inventory: Get number of anchors": {},
        "Link inventory: Get number of internal link junctions by type for a cell": {},
        "Link inventory: Get number of internal links": {},
        "Link inventory: Get number of link junctions by type for a cell": {},
        "Link inventory: Get number of links": {},
        "Link management: Create Anchor": {},
        "Link management: Create FPP Internal Link (Within Cluster)": {},
        "Link management: Create FPP Link": {},
        "Link management: Delete FPP Link (any type)": {},
        "Link management: Delete FPP Links Attached to a Cell (any type)": {},
        "Link property: activation energy": {},
        "Link property: anchor id (anchor only)": {},
        "Link property: anchor point (anchor only)": {},
        "Link property: initialization step": {},
        "Link property: lambda": {},
        "Link property: linked cell(s)": {},
        "Link property: maximum distance": {},
        "Link property: maximum number of junctions": {},
        "Link property: neighbor order": {},
        "Link property: target distance": {},
        "Visit: All anchors attached to a cell": {},
        "Visit: All cells attached to a cell by a link": {},
        "Visit: All cells attached to a cell by an internal link": {},
        "Visit: All internal links attached to a cell": {},
        "Visit: All links attached to a cell": {}
    },
    "Include": {
        "Automaton": {},
        "Boundary Strategy": {},
        "Boundary Type Definitions": {},
        "Cell/Cluster Inventory": {},
        "Field3D": {},
        "NumericalUtilis": {},
        "Plugin Files": {},
        "Point3D/Dim3D": {},
        "Potts3D": {},
        "Simulator": {},
        "StringUtilis": {},
        "Vector3": {}
    },
    "Inertia Tensor": {
        "Information": {},
        "Semiaxes": {}
    },
    "MaBoSS": {
        "Add a MaBoSS simulation to a cell": {},
        "Copy a MaBoSS network state": {},
        "Create a MaBoSS simulation": {},
        "Delete a MaBoSS model attached to a cell": {},
        "Get a MaBoSS network node": {},
        "Get a MaBoSS simulation attached to a cell": {},
        "Get/set a MaBoSS external variable": {},
        "Get/set a MaBoSS network node property": {},
        "Get/set a MaBoSS simulation property": {},
        "Step all attached MaBoSS models": {}
    },
    "Mitosis": {
        "1. Clone Attributes Parent -> Child": {},
        "1. Clone Cluster Attributes Parent -> Child": {},
        "2. Compact updateAttributes": {},
        "2. Compact updateAttributes for clusters": {},
        "Child on the Left of the Parent": {},
        "Child on the Right of the Parent": {},
        "Child/Parent Random Relative Position": {},
        "Clone Attributes (Flexible)": {},
        "Divide Cells Along Major Axis (Example)": {},
        "Divide Cells Along Minor Axis (Example)": {},
        "Divide Cells Along Normal To Vector (Example)": {},
        "Divide Cells Along Random Axis (Example)": {},
        "Divide Cluster Along Major Axis (Example)": {},
        "Divide Cluster Along Minor Axis (Example)": {},
        "Divide Cluster Along Normal To Vector (Example)": {},
        "Divide Cluster Along Random Axis (Example)": {}
    },
    "Module Setup": {
        "Preload Plugin": {}
    },
    "Parameter Scan Command Line": {
        "1. Run Parameter Scan Using Player (Windows)": {},
        "1. Run Parameter Scan With No GUI (Windows)": {},
        "2. Run Parameter Scan Using Player (Linux)": {},
        "2. Run Parameter Scan With No GUI (Linux)": {},
        "3. Run Parameter Scan Using Player (OSX)": {},
        "3. Run Parameter Scan With No GUI (OSX)": {},
        "Current Parameter Scan Iteration": {}
    },
    "Python Utilities": {
        "Fetch Steppable By Class Name": {},
        "Get Dir Of Current File": {},
        "Get FullPath Of Current File": {},
        "Import os": {},
        "Open File In Parameter Scan Main  Output Directory": {},
        "Open File In Simulation Output Directory": {},
        "Open File In Simulation Output Directory (low-level)": {},
        "Set Simulation Output Directory (main Python script)": {}
    },
    "Reaction Diffusion Solver FVM": {
        "Get a diffusivity field": {},
        "Get solver": {},
        "Get/set cell diffusivity": {},
        "Get/set cell permeation coefficients": {},
        "Set a fixed concentration in a volume": {},
        "Set a fixed concentration on a volume surface": {},
        "Set a fixed flux on a volume surface": {},
        "Set diffusive transport on a volume surface": {},
        "Set permeable membrane transport on a volume surface": {}
    },
    "SBML Solver": {
        "1. Model Initial Data": {},
        "2. Add Antimony model to cell ids": {},
        "2. Add Antimony model to cell types": {},
        "2. Add Antimony model to individual cell": {},
        "2. Add CellML model to cell ids": {},
        "2. Add CellML model to cell types": {},
        "2. Add CellML model to individual cell": {},
        "2. Add SBML model to cell ids": {},
        "2. Add SBML model to cell types": {},
        "2. Add SBML model to individual cell": {},
        "2. Add free floating Antimony model": {},
        "2. Add free floating CellML model": {},
        "2. Add free floating SBML model e.g. PBPK": {},
        "3. Timestep SBML models": {},
        "5. Copy All SBMLs": {},
        "5. Copy select SBMLs": {},
        "Delete Free Floating SBML": {},
        "Delete SBML from cell ids": {},
        "Delete SBML from cell types": {},
        "Delete SBML from individual cell": {},
        "Get SBML Integrator  Global Options": {},
        "Get SBML Simulator for Free Floating Model (advanced)": {},
        "Get SBML Simulator for individual cell (advanced)": {},
        "Get SBML State for Free Floating model": {},
        "Get SBML State for individual cell": {},
        "Get SBML Value for Free Floating model": {},
        "Get SBML Value for SBML in a specific cell": {},
        "Set SBML Integrator Global Options": {},
        "Set SBML State for Free Floating model": {},
        "Set SBML State for individual cell": {},
        "Set SBML Value for Free Floating model": {},
        "Set SBML Value for SBML in a specific cell": {}
    },
    "Scientific Plots": {
        "1. Setup (start fcn)": {},
        "2. Add Data Points (step fcn)": {},
        "3. Refresh Plots (unnecessary, deprecated - step fcn )": {},
        "Erase Plot (step fcn)": {},
        "Save Plot As A PNG File": {},
        "Save Plot As Data (text file)": {}
    },
    "Scientific Plots Histograms": {
        "1. Add Histogram Plot (start fcn)": {},
        "2. Add Histogram  (step fcn)": {},
        "Save  Plot As A PNG File": {},
        "Save Plot As Data (text file)": {}
    },
    "Secretion / Uptake / Field Integrals": {
        "Amount Seen by Cell": {},
        "Secrete Inside Cell": {},
        "Secrete Inside Cell At Boundary": {},
        "Secrete Inside Cell At Boundary On Contact With": {},
        "Secrete Inside Cell At COM": {},
        "Secrete Inside Cell Constant Concentration": {},
        "Secrete Outside Cell At Boundary": {},
        "Secrete Outside Cell At Boundary On Contact With": {},
        "Total Amount": {},
        "Uptake Inside Cell": {},
        "Uptake Inside Cell At Boundary": {},
        "Uptake Inside Cell At Boundary and On Contact With": {},
        "Uptake Inside Cell At COM": {},
        "Uptake Outside Cell At Boundary": {},
        "Uptake Outside Cell At Boundary and On Contact With": {}
    },
    "Simulation": {
        "Build Wall": {},
        "Change Number of CPU's (worknodes)": {},
        "Change Steppable Frequency": {},
        "Destroy Wall": {},
        "Get Lattice Dimensions": {},
        "Resize And Shift Lattice": {},
        "Set Max MCS": {},
        "Shared steppable dictionary": {},
        "Stop Simulation": {}
    },
    "Steering Panel": {
        "1.Set Up Steering Panel": {},
        "Check if Steering Panel Was Updated": {},
        "Get Updated Value of Steering Parameter": {}
    },
    "Visit": {
        "All Cells": {},
        "Compartments of a Cluster": {},
        "Pixel Neighbors": {}
    },
    "XML Utils": {
        "Find Attribute": {},
        "Find Element": {},
        "Get Attribute As Bool": {},
        "Get Attribute As Double": {},
        "Get Attribute As Int": {},
        "Get Attribute As Short": {},
        "Get Attribute As Text": {},
        "Get Attribute As UInt": {},
        "Get Attribute As UShort": {},
        "Get Element": {},
        "Get Element As Bool": {},
        "Get Element As Double": {},
        "Get Element As Int": {},
        "Get Element As Short": {},
        "Get Element As Text": {},
        "Get Element As UInt": {},
        "Get Element As UShort": {},
        "Process List of Elements": {}
    }
}